//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.10.1.0 (NJsonSchema v10.3.3.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"

namespace JG.FinTech.GiftAid.Api.Controllers
{
    using System = global::System;
    
    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.10.1.0 (NJsonSchema v10.3.3.0 (Newtonsoft.Json v12.0.0.0))")]
    [Microsoft.AspNetCore.Mvc.Route("api")]
    public abstract class GiftAidControllerBase : Microsoft.AspNetCore.Mvc.Controller
    {
        /// <summary>Get the amount of gift aid reclaimable for donation amount</summary>
        /// <param name="amount">The Donation Amount</param>
        /// <returns>OK</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("giftaid")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<GiftAidResponse>> Giftaid([Microsoft.AspNetCore.Mvc.FromQuery] double amount);
    
        /// <summary>Submits a gift aid declatation</summary>
        /// <returns>Created</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("giftaid/declarations")]
        public abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult<GiftAidDeclarationResponse>> Declarations([Microsoft.AspNetCore.Mvc.FromBody] GiftAidDeclaration declaration);
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.3.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GiftAidResponse 
    {
        [Newtonsoft.Json.JsonProperty("donationAmount", Required = Newtonsoft.Json.Required.Always)]
        public double DonationAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("giftAidAmount", Required = Newtonsoft.Json.Required.Always)]
        public double GiftAidAmount { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.3.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GiftAidDeclaration 
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("postCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string PostCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("donationAmount", Required = Newtonsoft.Json.Required.Always)]
        public double DonationAmount { get; set; }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.3.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GiftAidDeclarationResponse 
    {
        /// <summary>Unique Id of a gift aid declaration</summary>
        [Newtonsoft.Json.JsonProperty("token", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Token { get; set; }
    
        /// <summary>Calculated gift aid amount</summary>
        [Newtonsoft.Json.JsonProperty("giftAidAmount", Required = Newtonsoft.Json.Required.Always)]
        public double GiftAidAmount { get; set; }
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108